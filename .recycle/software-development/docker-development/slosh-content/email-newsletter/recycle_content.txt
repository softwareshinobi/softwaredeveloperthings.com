## What is Docker Hub?

DockerHub is the default **Docker image registry** where we can store our **Docker images**. You can think of it as GitHub for Git projects.

Here's a link to the Docker Hub:

[https://hub.docker.com](https://hub.docker.com)

You can sign up for a free account. That way you could push your Docker images from your local machine to DockerHub.

## What is a container?

According to the official definition from the [docker.com](docker.com) website, a container is a standard unit of software that packages up code and all its dependencies so the application runs quickly and reliably from one computing environment to another. A Docker container image is a lightweight, standalone, executable package of software that includes everything needed to run an application: code, runtime, system tools, system libraries, and settings.

Container images become containers at runtime and in the case of Docker containers - images become containers when they run on Docker Engine. Available for both Linux and Windows-based applications, containerized software will always run the same, regardless of the infrastructure. Containers isolate software from its environment and ensure that it works uniformly despite differences for instance between development and staging.

![](https://github.com/bobbyiliev/introduction-to-docker-ebook/raw/main/ebook/en/assets/images/infrastructure.png)

## What is a Docker image?

A **Docker Image** is just a template used to build a running Docker Container, similar to the ISO files and Virtual Machines. The containers are essentially the running instance of an image. Images are used to share containerized applications. Collections of images are stored in registries like [DockerHub](https://hub.docker.com/) or private registries.

![](https://github.com/bobbyiliev/introduction-to-docker-ebook/raw/main/ebook/en/assets/images/process.png)
